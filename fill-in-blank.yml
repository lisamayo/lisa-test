# Webform Configuration with Token Integration
# This uses Drupal's token system for dynamic text generation

langcode: en
status: open
dependencies: 
  module:
    - token
weight: 0
open: null
close: null
uid: 1
template: false
archive: false
id: fill_in_the_blank_token_generator
title: 'Fill in the Blank Text Generator (Token-Based)'
description: 'Create personalized text using Drupal tokens for dynamic content generation.'
category: ''
elements: |-
  instructions:
    '#type': processed_text
    '#text': |
      <div class="webform-instructions">
        <h3>Instructions</h3>
        <p>Fill in the fields below to generate your personalized text using Drupal tokens. The preview will update automatically as you type.</p>
        <p><strong>Available tokens:</strong> [webform_submission:values:field_name]</p>
      </div>
    '#format': full_html
  
  template_section:
    '#type': fieldset
    '#title': 'Template Settings'
    '#open': true
    
    template_text:
      '#type': textarea
      '#title': 'Template Text (with tokens)'
      '#description': 'Use webform tokens like [webform_submission:values:name] to insert field values.'
      '#default_value': |
        Hello [webform_submission:values:name], welcome to [webform_submission:values:location]!
        
        Your favorite color is [webform_submission:values:color] and you enjoy [webform_submission:values:activity] on weekends.
        
        Today is a [webform_submission:values:weather] day, perfect for [webform_submission:values:mood_activity].
        
        Your personal message: [webform_submission:values:personal_message]
        
        Generated on: [current-date:long]
      '#rows': 6
      '#attributes':
        class: ['template-editor']
    
    token_help:
      '#type': details
      '#title': 'Available Tokens'
      '#open': false
      token_tree:
        '#theme': token_tree_link
        '#token_types': ['webform_submission', 'current-date', 'current-user', 'site']
        '#show_restricted': true
        '#show_nested': false
  
  fill_fields:
    '#type': fieldset
    '#title': 'Fill in the Blanks'
    '#open': true
    
    name:
      '#type': textfield
      '#title': 'Name'
      '#placeholder': 'Enter your name'
      '#required': false
      '#attributes':
        class: ['fill-field']
        data-token: '[webform_submission:values:name]'
    
    location:
      '#type': select
      '#title': 'Location'
      '#options':
        '': '- Select a location -'
        'New York': 'New York'
        'Los Angeles': 'Los Angeles'
        'Chicago': 'Chicago'
        'Houston': 'Houston'
        'Phoenix': 'Phoenix'
        'Miami': 'Miami'
        'Other': 'Other (specify below)'
      '#attributes':
        class: ['fill-field']
        data-token: '[webform_submission:values:location]'
    
    custom_location:
      '#type': textfield
      '#title': 'Custom Location'
      '#placeholder': 'Enter your custom location'
      '#states':
        visible:
          ':input[name="location"]':
            value: 'Other'
      '#attributes':
        class: ['fill-field']
    
    color:
      '#type': select
      '#title': 'Favorite Color'
      '#options':
        '': '- Select a color -'
        'red': 'Red'
        'blue': 'Blue'
        'green': 'Green'
        'yellow': 'Yellow'
        'purple': 'Purple'
        'orange': 'Orange'
        'custom': 'Other (specify below)'
      '#attributes':
        class: ['fill-field']
        data-token: '[webform_submission:values:color]'
    
    custom_color:
      '#type': textfield
      '#title': 'Custom Color'
      '#placeholder': 'Enter your custom color'
      '#states':
        visible:
          ':input[name="color"]':
            value: 'custom'
      '#attributes':
        class: ['fill-field']
    
    activity:
      '#type': textfield
      '#title': 'Weekend Activity'
      '#placeholder': 'What do you like to do on weekends?'
      '#attributes':
        class: ['fill-field']
        data-token: '[webform_submission:values:activity]'
    
    weather:
      '#type': select
      '#title': 'Weather'
      '#options':
        '': '- Select weather -'
        'sunny': 'Sunny'
        'cloudy': 'Cloudy'
        'rainy': 'Rainy'
        'snowy': 'Snowy'
        'windy': 'Windy'
        'perfect': 'Perfect'
      '#attributes':
        class: ['fill-field']
        data-token: '[webform_submission:values:weather]'
    
    mood_activity:
      '#type': select
      '#title': 'Mood Activity'
      '#options':
        '': '- Select activity -'
        'reading': 'Reading'
        'exercising': 'Exercising'
        'cooking': 'Cooking'
        'gaming': 'Gaming'
        'socializing': 'Socializing'
        'relaxing': 'Relaxing'
        'exploring': 'Exploring'
      '#attributes':
        class: ['fill-field']
        data-token: '[webform_submission:values:mood_activity]'
    
    personal_message:
      '#type': textarea
      '#title': 'Personal Message'
      '#placeholder': 'Add a personal message or note'
      '#rows': 3
      '#attributes':
        class: ['fill-field']
        data-token: '[webform_submission:values:personal_message]'
  
  preview_section:
    '#type': fieldset
    '#title': 'Live Preview'
    '#open': true
    
    preview_controls:
      '#type': container
      '#attributes':
        class: ['preview-controls']
      
      preview_button:
        '#type': button
        '#value': 'Update Preview'
        '#attributes':
          class: ['btn', 'btn-primary', 'preview-btn']
      
      clear_button:
        '#type': button
        '#value': 'Clear All Fields'
        '#attributes':
          class: ['btn', 'btn-secondary', 'clear-btn']
      
      copy_button:
        '#type': button
        '#value': 'Copy to Clipboard'
        '#attributes':
          class: ['btn', 'btn-success', 'copy-btn']
    
    preview_output:
      '#type': webform_markup
      '#markup': |
        <div id="preview-output" class="preview-area">
          <h4>Generated Text Preview:</h4>
          <div class="preview-text" id="preview-text-content">
            Fill in the fields above to see the generated text with tokens.
          </div>
          <div class="token-debug" id="token-debug" style="display: none;">
            <h5>Token Debug Info:</h5>
            <pre id="token-debug-content"></pre>
          </div>
        </div>

css: |
  .webform-instructions {
    background: #f8f9fa;
    border: 1px solid #dee2e6;
    border-radius: 8px;
    padding: 20px;
    margin-bottom: 20px;
  }
  
  .template-editor {
    font-family: 'Courier New', monospace;
    background: #f8f9fa;
    border: 2px solid #007bff;
    font-size: 14px;
  }
  
  .fill-field {
    margin-bottom: 10px;
    transition: border-color 0.3s ease;
  }
  
  .fill-field:focus {
    border-color: #007bff;
    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
  }
  
  .preview-area {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    border-radius: 12px;
    padding: 25px;
    margin-top: 20px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }
  
  .preview-text {
    background: white;
    color: #333;
    border: 1px solid #ced4da;
    border-radius: 8px;
    padding: 20px;
    margin-top: 15px;
    min-height: 100px;
    line-height: 1.8;
    font-size: 16px;
    white-space: pre-wrap;
    word-wrap: break-word;
  }
  
  .preview-controls {
    margin-bottom: 15px;
  }
  
  .preview-controls button {
    margin-right: 10px;
    margin-bottom: 5px;
  }
  
  .token-debug {
    background: rgba(255, 255, 255, 0.1);
    border-radius: 4px;
    padding: 15px;
    margin-top: 10px;
    font-size: 12px;
  }
  
  .token-debug pre {
    color: #fff;
    font-size: 11px;
    max-height: 200px;
    overflow-y: auto;
  }
  
  .token-tree-link {
    margin-top: 10px;
  }
  
  .webform-submission-form .form-actions {
    display: none;
  }
  
  .unfilled-token {
    background-color: #ffeb3b;
    color: #333;
    padding: 2px 6px;
    border-radius: 3px;
    font-weight: bold;
  }
  
  .filled-token {
    background-color: #4caf50;
    color: white;
    padding: 2px 6px;
    border-radius: 3px;
    font-weight: bold;
  }

javascript: |
  (function($, Drupal) {
    'use strict';
    
    Drupal.behaviors.tokenFillBlankGenerator = {
      attach: function(context, settings) {
        
        // Token replacement function
        function replaceTokens(template, values) {
          var result = template;
          
          // Handle custom location/color logic
          if (values.location === 'Other' && values.custom_location) {
            values.location = values.custom_location;
          }
          if (values.color === 'custom' && values.custom_color) {
            values.color = values.custom_color;
          }
          
          // Replace webform submission tokens
          Object.keys(values).forEach(function(key) {
            var token = '[webform_submission:values:' + key + ']';
            var value = values[key] || '';
            result = result.replace(new RegExp(token.replace(/[.*+?^${}()|[\]\\]/g, '\\$&'), 'g'), value);
          });
          
          // Replace current date tokens (basic implementation)
          var currentDate = new Date();
          result = result.replace(/\[current-date:long\]/g, currentDate.toLocaleDateString('en-US', {
            weekday: 'long',
            year: 'numeric',
            month: 'long',
            day: 'numeric'
          }));
          
          result = result.replace(/\[current-date:short\]/g, currentDate.toLocaleDateString());
          result = result.replace(/\[current-date:medium\]/g, currentDate.toLocaleDateString('en-US', {
            year: 'numeric',
            month: 'short',
            day: 'numeric'
          }));
          
          // Replace site tokens (basic implementation)
          result = result.replace(/\[site:name\]/g, drupalSettings.siteName || 'Your Site');
          result = result.replace(/\[site:url\]/g, window.location.origin);
          
          return result;
        }
        
        // Get form values
        function getFormValues() {
          var values = {};
          $('.fill-field').each(function() {
            var $field = $(this);
            var name = $field.attr('name');
            if (name) {
              values[name] = $field.val() || '';
            }
          });
          return values;
        }
        
        // Generate preview
        function generatePreview() {
          var template = $('#edit-template-text').val();
          var values = getFormValues();
          
          // Replace tokens
          var previewText = replaceTokens(template, values);
          
          // Highlight unfilled tokens
          previewText = previewText.replace(/\[webform_submission:values:([^\]]+)\]/g, 
            '<span class="unfilled-token">[missing: $1]</span>');
          
          // Highlight other unfilled tokens
          previewText = previewText.replace(/\[([^\]]+)\]/g, 
            '<span class="unfilled-token">[unfilled: $1]</span>');
          
          // Update preview
          $('#preview-text-content').html(previewText);
          
          // Debug information
          $('#token-debug-content').text(JSON.stringify(values, null, 2));
        }
        
        // Preview button
        $('.preview-btn', context).once('preview-click').on('click', function(e) {
          e.preventDefault();
          generatePreview();
          return false;
        });
        
        // Auto-preview on field changes
        $('.fill-field', context).once('auto-preview').on('input change keyup', function() {
          // Debounce the preview generation
          clearTimeout(window.previewTimeout);
          window.previewTimeout = setTimeout(generatePreview, 300);
        });
        
        // Template text changes
        $('#edit-template-text', context).once('template-change').on('input change', function() {
          clearTimeout(window.previewTimeout);
          window.previewTimeout = setTimeout(generatePreview, 500);
        });
        
        // Clear functionality
        $('.clear-btn', context).once('clear-click').on('click', function(e) {
          e.preventDefault();
          
          // Clear all form fields
          $('.fill-field').val('');
          $('select.fill-field').prop('selectedIndex', 0);
          
          // Reset preview
          $('#preview-text-content').html('Fill in the fields above to see the generated text with tokens.');
          $('#token-debug-content').text('');
          
          return false;
        });
        
        // Copy to clipboard functionality
        $('.copy-btn', context).once('copy-click').on('click', function(e) {
          e.preventDefault();
          
          var textToCopy = $('#preview-text-content').text();
          
          if (navigator.clipboard) {
            navigator.clipboard.writeText(textToCopy).then(function() {
              alert('Text copied to clipboard!');
            });
          } else {
            // Fallback for older browsers
            var textArea = document.createElement('textarea');
            textArea.value = textToCopy;
            document.body.appendChild(textArea);
            textArea.select();
            document.execCommand('copy');
            document.body.removeChild(textArea);
            alert('Text copied to clipboard!');
          }
          
          return false;
        });
        
        // Toggle debug info
        $(document).once('debug-toggle').on('keydown', function(e) {
          if (e.ctrlKey && e.shiftKey && e.key === 'D') {
            $('#token-debug').toggle();
          }
        });
        
        // Initial preview generation
        setTimeout(generatePreview, 500);
      }
    };
    
  })(jQuery, Drupal);

settings:
  ajax: true
  ajax_scroll_top: form
  ajax_progress_type: fullscreen
  page: true
  page_submit_path: ''
  page_confirm_path: ''
  wizard_progress_bar: true
  wizard_progress_pages: false
  wizard_progress_percentage: false
  wizard_start_label: ''
  wizard_preview_link: false
  wizard_confirmation: true
  wizard_confirmation_label: ''
  wizard_track: ''
  preview: 0
  draft: none
  draft_multiple: false
  draft_auto_save: false
  draft_saved_message: ''
  draft_loaded_message: ''
  draft_pending_single_message: ''
  draft_pending_multiple_message: ''
  confirmation_type: none
  confirmation_title: ''
  confirmation_message: ''
  confirmation_url: ''
  confirmation_attributes: {  }
  confirmation_back: true
  confirmation_back_label: ''
  confirmation_back_attributes: {  }
  confirmation_exclude_query: false
  confirmation_exclude_token: false
  confirmation_update: false
  limit_total: null
  limit_total_interval: null
  limit_total_message: ''
  limit_total_unique: false
  limit_user: null
  limit_user_interval: null
  limit_user_message: ''
  limit_user_unique: false
  entity_limit_total: null
  entity_limit_total_interval: null
  entity_limit_user: null
  entity_limit_user_interval: null
  purge: none
  purge_days: null
  results_disabled: true
  results_disabled_ignore: false
  results_customize: false
  token_view: false
  token_update: false
  token_delete: false
  serial_disabled: false

access:
  create:
    roles:
      - anonymous
      - authenticated
    users: {  }
    permissions: {  }
  view_any:
    roles: {  }
    users: {  }
    permissions: {  }
  update_any:
    roles: {  }
    users: {  }
    permissions: {  }
  delete_any:
    roles: {  }
    users: {  }
    permissions: {  }
  purge_any:
    roles: {  }
    users: {  }
    permissions: {  }
  view_own:
    roles: {  }
    users: {  }
    permissions: {  }
  update_own:
    roles: {  }
    users: {  }
    permissions: {  }
  delete_own:
    roles: {  }
    users: {  }
    permissions: {  }
  administer:
    roles: {  }
    users: {  }
    permissions: {  }
  test:
    roles: {  }
    users: {  }
    permissions: {  }
  configuration:
    roles: {  }
    users: {  }
    permissions: {  }

handlers: {  }
